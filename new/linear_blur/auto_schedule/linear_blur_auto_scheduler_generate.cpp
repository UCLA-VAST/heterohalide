#include "Halide.h"
#include <stdio.h>

using namespace Halide;

// We will define a generator to auto-schedule.
class AutoScheduled : public Halide::Generator<AutoScheduled> {
public:
    Input<Buffer<float>>  input{"input", 3};

    Output<Buffer<float>> srgb{"srgb", 3};

    void generate() {
        linear(x, y, c) = select(input(x, y, c) <= 0.04045f,
                                    input(x, y, c) / 12.92f,
                                    pow(((input(x, y, c) + .055f) / (1.0f + .055f)), 2.4f));

        blur_x(x, y, c) = (linear(x, y, c) + linear(x+1, y, c) + linear(x+2, y, c))/3;

        blur_y(x, y, c) = (blur_x(x, y, c) + blur_x(x, y+1, c) + blur_x(x, y+2, c))/3;
        
        srgb(x, y, c) = select(blur_y(x, y, c) <= .0031308f,
                        blur_y(x, y, c) * 12.92f,
                        (1 + .055f) * pow(blur_y(x, y, c), 1.0f / 2.4f) - .055f);

    }

    void schedule() {
        if (auto_schedule) {

            input.dim(0).set_bounds_estimate(0, 768);
            input.dim(1).set_bounds_estimate(0, 1280);
            input.dim(2).set_bounds_estimate(0, 3);

            srgb.estimate(x, 0, 768)
                   .estimate(y, 0, 1280)
                   .estimate(c, 0, 3);


        } else {
            // This is where you would declare the schedule you have written by
            // hand or paste the schedule generated by the auto-scheduler.
            // We will use a naive schedule here to compare the performance of
            // the autoschedule with a basic schedule.

            srgb.split(y, y3, yi3, 8).parallel(y3).vectorize(x, 8); // stage_3

            // blur_x.compute_root();
            // blur_y.compute_root();
            // output.compute_root();
        }
    }
private:
    Var x{"x"}, y{"y"}, c{"c"}, yi3{"yi3"}, y3{"y3"};
    Func linear, blur_x, blur_y;
};

// As in lesson 15, we register our generator and then compile this
// file along with tools/GenGen.cpp.
HALIDE_REGISTER_GENERATOR(AutoScheduled, auto_schedule_gen)

// After compiling this file, see how to use it in
