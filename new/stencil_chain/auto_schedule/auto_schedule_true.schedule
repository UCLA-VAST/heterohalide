// Target: x86-64-linux-avx-avx2-f16c-fma-sse41
// MachineParams: 32,16777216,40

// Delete this line if not using Generator
Pipeline pipeline = get_pipeline();

Var x_i("x_i");
Var x_i_vi("x_i_vi");
Var x_i_vo("x_i_vo");
Var x_o("x_o");
Var x_vi("x_vi");
Var x_vo("x_vo");
Var y_i("y_i");
Var y_o("y_o");

Func output = pipeline.get_func(5);
Func stage_0 = pipeline.get_func(2);
Func stage_1 = pipeline.get_func(3);

{
    Var x = output.args()[0];
    Var y = output.args()[1];
    output
        .compute_root()
        .split(x, x_o, x_i, 256)
        .split(y, y_o, y_i, 256)
        .reorder(x_i, y_i, x_o, y_o)
        .split(x_i, x_i_vo, x_i_vi, 16)
        .vectorize(x_i_vi)
        .parallel(y_o)
        .parallel(x_o);
}
{
    Var x = stage_0.args()[0];
    stage_0
        .compute_at(output, x_o)
        .split(x, x_vo, x_vi, 16)
        .vectorize(x_vi);
}
{
    Var x = stage_1.args()[0];
    stage_1
        .compute_at(output, x_o)
        .split(x, x_vo, x_vi, 16)
        .vectorize(x_vi);
}

